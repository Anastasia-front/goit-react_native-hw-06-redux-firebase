{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar initialState = {\n  photo: \"\",\n  name: \"\",\n  email: \"\"\n};\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"SAVE_PHOTO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        photo: action.payload\n      });\n    case \"SAVE_NAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.payload\n      });\n    case \"SAVE_EMAIL\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.payload\n      });\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["initialState","photo","name","email","authReducer","state","arguments","length","undefined","action","type","_objectSpread","payload"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/src/redux/auth/authReducer.js"],"sourcesContent":["const initialState = {\n  photo: \"\",\n  name: \"\",\n  email: \"\",\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SAVE_PHOTO\":\n      return {\n        ...state,\n        photo: action.payload,\n      };\n    case \"SAVE_NAME\":\n      return {\n        ...state,\n        name: action.payload,\n      };\n    case \"SAVE_EMAIL\":\n      return {\n        ...state,\n        email: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n\n// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   login: null,\n//   email: null,\n//   photoURL: null,\n//   userId: null,\n//   stateChange: false,\n// };\n\n// export const authSlice = createSlice({\n//   name: \"auth\",\n//   initialState,\n//   reducers: {\n//     updateUserProfile: (state, { payload }) => ({\n//       ...state,\n//       login: payload.login,\n//       userId: payload.userId,\n//       email: payload.email,\n//       photoURL: payload.photoURL,\n//     }),\n//     authStateChange: (state, { payload }) => ({\n//       ...state,\n//       stateChange: payload.stateChange,\n//     }),\n//     authSignOut: () => initialState,\n//   },\n// });\n\n// export const { updateUserProfile, authStateChange, authSignOut } =\n//   authSlice.actions;\n\n// export const authReducer = authSlice.reducer;\n"],"mappings":";;;AAAA,IAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAqC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAAC,aAAA,CAAAA,aAAA,KACKN,KAAK;QACRJ,KAAK,EAAEQ,MAAM,CAACG;MAAO;IAEzB,KAAK,WAAW;MACd,OAAAD,aAAA,CAAAA,aAAA,KACKN,KAAK;QACRH,IAAI,EAAEO,MAAM,CAACG;MAAO;IAExB,KAAK,YAAY;MACf,OAAAD,aAAA,CAAAA,aAAA,KACKN,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACG;MAAO;IAEzB;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}