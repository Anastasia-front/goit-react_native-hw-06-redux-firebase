{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PostsList } from \"../components/PostList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PostStack = createStackNavigator();\nvar screenOptions = function screenOptions(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  return _objectSpread(_objectSpread({}, styles), {}, {\n    title: \"Публікації\",\n    headerRight: function headerRight() {}\n  });\n};\nexport var PostsScreen = function PostsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(PostStack.Navigator, {\n    screenOptions: screenOptions,\n    children: _jsx(PostStack.Screen, {\n      name: \"Posts\",\n      component: PostsList\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  headerTintColor: \"#212121\",\n  headerTitleAlign: \"center\",\n  headerTitleStyle: {\n    fontWeight: \"500\",\n    fontSize: 17\n  },\n  headerTitleContainerStyle: {\n    justifyContent: \"flex-end\",\n    paddingBottom: 11,\n    paddingHorizontal: 16\n  },\n  headerRightContainerStyle: {\n    justifyContent: \"flex-end\",\n    paddingBottom: 11,\n    paddingHorizontal: 16\n  },\n  headerLeftContainerStyle: {\n    justifyContent: \"flex-end\",\n    paddingBottom: 11,\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"names":["createStackNavigator","StyleSheet","PostsList","jsx","_jsx","PostStack","screenOptions","_ref","navigation","route","_objectSpread","styles","title","headerRight","PostsScreen","_ref2","Navigator","children","Screen","name","component","create","headerTintColor","headerTitleAlign","headerTitleStyle","fontWeight","fontSize","headerTitleContainerStyle","justifyContent","paddingBottom","paddingHorizontal","headerRightContainerStyle","headerLeftContainerStyle"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/src/Screens/PostsScreen.js"],"sourcesContent":["// import { View, Text, Image, StyleSheet } from \"react-native\";\n// import Post from \"../components/Post\";\n// import {\n//   selectName,\n//   selectPostName,\n//   selectAvatar,\n//   selectEmail,\n//   selectPostLocation,\n//   selectPostPhoto,\n// } from \"../redux/selectors\";\n// import { useSelector } from \"react-redux\";\n\n// const PostsScreen = () => {\n//   const name = useSelector(selectName);\n//   const avatar = useSelector(selectAvatar);\n//   const email = useSelector(selectEmail);\n//   const postName = useSelector(selectPostName);\n//   const postPhoto = useSelector(selectPostPhoto);\n//   const postLocation = useSelector(selectPostLocation);\n\n//   return (\n//     <View style={styles.main}>\n//       <View style={styles.parent}>\n//         <View style={styles.person}>\n//           <Image style={styles.image} source={{ uri: avatar }} />\n//           <View style={styles.text}>\n//             <Text style={styles.name}>{name}</Text>\n//             <Text style={styles.email}>{email}</Text>\n//           </View>\n//         </View>\n//         <View style={{ marginTop: 30 }}>\n//           <Post\n//             img={{ uri: postPhoto }}\n//             title={postName}\n//             location={postLocation}\n//           />\n//         </View>\n//       </View>\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   main: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//     borderColor: \"grey\",\n//     borderTopWidth: 1,\n//     borderBottomWidth: 1,\n//   },\n//   parent: {\n//     marginHorizontal: 20,\n//     marginVertical: 30,\n//   },\n//   person: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     justifyContent: \"flex-start\",\n//     gap: 10,\n//   },\n//   image: {\n//     width: 60,\n//     height: 60,\n//   },\n//   text: {\n//     letterSpacing: -0.2,\n//   },\n//   name: {\n//     fontSize: 15,\n//     fontWeight: \"700\",\n//   },\n//   email: { fontSize: 13, fontWeight: \"400\" },\n// });\n\n// export default PostsScreen;\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { StyleSheet } from \"react-native\";\nimport { PostsList } from \"../components/PostList\";\n\nconst PostStack = createStackNavigator();\n\nconst screenOptions = ({ navigation, route }) => ({\n  ...styles,\n  title: \"Публікації\",\n  headerRight: () => {},\n});\n\nexport const PostsScreen = ({ navigation }) => {\n  return (\n    <PostStack.Navigator screenOptions={screenOptions}>\n      <PostStack.Screen\n        name=\"Posts\"\n        component={PostsList}\n        // options={{ change inside PostsList }}\n      />\n    </PostStack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerTintColor: \"#212121\",\n  headerTitleAlign: \"center\",\n  headerTitleStyle: {\n    fontWeight: \"500\",\n    fontSize: 17,\n  },\n  headerTitleContainerStyle: {\n    justifyContent: \"flex-end\",\n    paddingBottom: 11,\n    paddingHorizontal: 16,\n  },\n  headerRightContainerStyle: {\n    justifyContent: \"flex-end\",\n    paddingBottom: 11,\n    paddingHorizontal: 16,\n  },\n  headerLeftContainerStyle: {\n    justifyContent: \"flex-end\",\n    paddingBottom: 11,\n    paddingHorizontal: 16,\n  },\n});\n"],"mappings":";;;AA4EA,SAASA,oBAAoB,QAAQ,yBAAyB;AAAC,OAAAC,UAAA;AAE/D,SAASC,SAAS;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAEnD,IAAMC,SAAS,GAAGL,oBAAoB,CAAC,CAAC;AAExC,IAAMM,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA;EAAA,IAAMC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAAA,OAAAC,aAAA,CAAAA,aAAA,KACrCC,MAAM;IACTC,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,SAAAA,YAAA,EAAM,CAAC;EAAC;AAAA,CACrB;AAEF,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,KAAA,EAAuB;EAAA,IAAjBP,UAAU,GAAAO,KAAA,CAAVP,UAAU;EACtC,OACEJ,IAAA,CAACC,SAAS,CAACW,SAAS;IAACV,aAAa,EAAEA,aAAc;IAAAW,QAAA,EAChDb,IAAA,CAACC,SAAS,CAACa,MAAM;MACfC,IAAI,EAAC,OAAO;MACZC,SAAS,EAAElB;IAAU,CAEtB;EAAC,CACiB,CAAC;AAE1B,CAAC;AAED,IAAMS,MAAM,GAAGV,UAAU,CAACoB,MAAM,CAAC;EAC/BC,eAAe,EAAE,SAAS;EAC1BC,gBAAgB,EAAE,QAAQ;EAC1BC,gBAAgB,EAAE;IAChBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,yBAAyB,EAAE;IACzBC,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE;EACrB,CAAC;EACDC,yBAAyB,EAAE;IACzBH,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE;EACrB,CAAC;EACDE,wBAAwB,EAAE;IACxBJ,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}