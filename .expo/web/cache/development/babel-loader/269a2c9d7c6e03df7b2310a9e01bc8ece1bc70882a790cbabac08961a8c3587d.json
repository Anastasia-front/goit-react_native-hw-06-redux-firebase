{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authUpdateUser } from \"../redux/auth/authOperations\";\nimport { selectStateUserId, selectStateLogin, selectStateAvatar, selectorStateComment } from \"../redux/selectors\";\nimport { storage } from \"../firebase/config\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Feather } from \"@expo/vector-icons\";\nimport image from \"../img/Photo-BG.jpg\";\nimport { db } from \"../firebase/config\";\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\nimport { ProfileList } from \"../components/ProfileList\";\nimport { askIfQuit, ImageManipulator } from \"../helpers\";\nimport { LoaderScreen } from \"./LoaderScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ProfileScreen = function ProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isShowLoaderAvatar = _useState4[0],\n    setIsShowLoaderAvatar = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isShowLoaderPosts = _useState6[0],\n    setIsShowLoaderPosts = _useState6[1];\n  var dispatch = useDispatch();\n  var userId = useSelector(selectStateUserId);\n  var login = useSelector(selectStateLogin);\n  var avatar = useSelector(selectStateAvatar);\n  var comment = useSelector(selectorStateComment);\n  useEffect(function () {\n    setIsShowLoaderPosts(true);\n    var dbRef = collection(db, \"posts\");\n    var myQuery = query(dbRef, where(\"owner.userId\", \"==\", userId));\n    onSnapshot(myQuery, function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      var reversPosts = posts.reverse();\n      setPosts(reversPosts);\n      setIsShowLoaderPosts(false);\n    }, function () {});\n  }, [userId, comment]);\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$ImagePicker$la = yield ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1\n          }),\n          assets = _yield$ImagePicker$la.assets,\n          canceled = _yield$ImagePicker$la.canceled;\n        if (!canceled) {\n          var _assets = _slicedToArray(assets, 1),\n            uri = _assets[0].uri;\n          var newUri = yield ImageManipulator(uri, [{\n            resize: {\n              height: 240,\n              width: 240\n            }\n          }], 0.5);\n          return newUri;\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var uploadPhotoToServer = function () {\n    var _ref3 = _asyncToGenerator(function* (photo) {\n      var uniquePostId = Date.now().toString();\n      try {\n        var response = yield fetch(photo);\n        var file = yield response.blob();\n        var imageRef = ref(storage, \"userAvatars/\" + uniquePostId);\n        yield uploadBytes(imageRef, file);\n        return yield getDownloadURL(imageRef);\n      } catch (error) {\n        console.log(\"uploadPhotoToServer =====>> \", error);\n        Alert.alert(\"Вибачте, але фото не зберіглось на сервері\", error.message);\n      }\n    });\n    return function uploadPhotoToServer(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var changeAvatar = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setIsShowLoaderAvatar(true);\n      var avatarUri = yield pickImage();\n      var avatarURL = yield uploadPhotoToServer(avatarUri);\n      dispatch(authUpdateUser({\n        avatarURL: avatarURL\n      })).then(function (data) {\n        if (data === undefined || !data.uid) {\n          setIsShowLoaderAvatar(false);\n          Alert.alert(\"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044E \\u043D\\u0435 \\u0432\\u0438\\u043A\\u043E\\u043D\\u0430\\u043D\\u043E! \\u041F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430: \" + data);\n          return;\n        }\n        Alert.alert(\"Вітаємо! Аватар змінено\");\n      });\n      setIsShowLoaderAvatar(false);\n    });\n    return function changeAvatar() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(ImageBackground, {\n    source: image,\n    style: styles.imageBg,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.myPostsContainer,\n        children: [_jsxs(View, {\n          style: styles.avatarContainer,\n          children: [_jsx(View, {\n            style: styles.avatarWrp,\n            children: isShowLoaderAvatar ? _jsx(LoaderScreen, {}) : _jsx(Image, {\n              source: {\n                uri: avatar\n              },\n              style: styles.avatarImg\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonAvatar,\n            onPress: changeAvatar,\n            children: _jsx(Text, {\n              style: styles.buttonAvatarText,\n              children: \"+\"\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.exitBtn,\n          children: _jsx(Feather, {\n            name: \"log-out\",\n            size: 24,\n            color: styles.exitBtn.color,\n            onPress: function onPress() {\n              askIfQuit(dispatch);\n            }\n          })\n        }), _jsx(Text, {\n          style: styles.login,\n          children: login\n        }), _jsxs(Text, {\n          style: styles.count,\n          children: [\"\\u0412\\u0441\\u044C\\u043E\\u0433\\u043E \\u043F\\u0443\\u0431\\u043B\\u0456\\u043A\\u0430\\u0446\\u0456\\u0439: \", posts.length]\n        }), isShowLoaderPosts ? _jsx(LoaderScreen, {}) : _jsx(ProfileList, {\n          posts: posts,\n          navigation: navigation,\n          route: route\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  imageBg: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\"\n  },\n  container: {\n    marginTop: -450,\n    paddingHorizontal: 16,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    backgroundColor: \"#fff\"\n  },\n  myPostsContainer: {\n    paddingTop: 60,\n    minHeight: \"50%\"\n  },\n  avatarContainer: {\n    position: \"absolute\",\n    top: 60,\n    left: 250,\n    alignSelf: \"center\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n    borderRadius: 16,\n    backgroundColor: \"#F6F6F6\"\n  },\n  avatarWrp: {\n    borderRadius: 16,\n    overflow: \"hidden\",\n    height: \"14%\",\n    width: \"14%\"\n  },\n  avatarImg: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  buttonAvatar: {\n    position: \"absolute\",\n    bottom: 13,\n    right: -13,\n    height: 25,\n    width: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#ffffff\"\n  },\n  buttonAvatarText: {\n    color: \"#FF6C00\"\n  },\n  exitBtn: {\n    position: \"absolute\",\n    right: 0,\n    top: 16,\n    color: \"#BDBDBD\"\n  },\n  login: {\n    marginBottom: 5,\n    alignSelf: \"center\",\n    fontSize: 30,\n    fontWeight: \"500\"\n  },\n  count: {\n    alignSelf: \"flex-end\",\n    fontSize: 12,\n    marginBottom: 3,\n    color: \"#BDBDBD\"\n  }\n});","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","authUpdateUser","selectStateUserId","selectStateLogin","selectStateAvatar","selectorStateComment","storage","ref","uploadBytes","getDownloadURL","View","Text","TouchableOpacity","ImageBackground","Image","Alert","StyleSheet","ImagePicker","Feather","image","db","collection","onSnapshot","query","where","ProfileList","askIfQuit","ImageManipulator","LoaderScreen","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","isShowLoaderAvatar","setIsShowLoaderAvatar","_useState5","_useState6","isShowLoaderPosts","setIsShowLoaderPosts","dispatch","userId","login","avatar","comment","dbRef","myQuery","querySnapshot","docs","map","doc","_objectSpread","id","data","reversPosts","reverse","pickImage","_ref2","_asyncToGenerator","_yield$ImagePicker$la","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","assets","canceled","_assets","uri","newUri","resize","height","width","error","console","log","message","apply","arguments","uploadPhotoToServer","_ref3","photo","uniquePostId","Date","now","toString","response","fetch","file","blob","imageRef","alert","_x","changeAvatar","_ref4","avatarUri","avatarURL","then","undefined","uid","source","style","styles","imageBg","children","container","myPostsContainer","avatarContainer","avatarWrp","avatarImg","buttonAvatar","onPress","buttonAvatarText","exitBtn","name","size","color","count","length","create","flex","resizeMode","justifyContent","marginTop","paddingHorizontal","borderTopLeftRadius","borderTopRightRadius","backgroundColor","paddingTop","minHeight","position","top","left","alignSelf","alignItems","borderRadius","overflow","bottom","right","borderWidth","borderColor","marginBottom","fontSize","fontWeight"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/src/Screens/ProfileScreen.js"],"sourcesContent":["// import { View, ImageBackground, Image, Text, StyleSheet } from \"react-native\";\n// import OverlayImage from \"../components/OverlayImage\";\n// import { Post } from \"../components/Post\";\n// import { Ionicons } from \"@expo/vector-icons\";\n// import { selectAvatar, selectName } from \"../redux/selectors\";\n// import { useDispatch, useSelector } from \"react-redux\";\n\n// export const ProfileScreen = () => {\n//   const name = useSelector(selectName);\n//   const avatar = useSelector(selectAvatar);\n//   return (\n//     <View style={styles.container}>\n//       <ImageBackground\n//         source={require(\"../img/Photo-BG.jpg\")}\n//         style={styles.imageBackground}\n//         resizeMode=\"cover\"\n//       >\n//         <View style={styles.overlayContainer}>\n//           <OverlayImage top={-50} />\n//           <Image style={styles.photoImage} source={{ uri: avatar }} />\n//           <Ionicons\n//             name=\"ios-log-out\"\n//             size={35}\n//             color=\"grey\"\n//             style={styles.icon}\n//             // onPress={onLogin}\n//           />\n//           <View\n//             style={{\n//               marginTop: -620,\n//             }}\n//           >\n//             <Text style={styles.name}>{name}</Text>\n//             <Post />\n//           </View>\n//         </View>\n//       </ImageBackground>\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     ...StyleSheet.absoluteFill,\n//   },\n//   imageBackground: {\n//     flex: 1,\n//   },\n//   overlayContainer: {\n//     ...StyleSheet.absoluteFill,\n//     flex: 1,\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   icon: {\n//     position: \"absolute\",\n//     // top: 150,\n//     // right: 30,\n//     top: \"28%\",\n//     right: 0,\n//     transform: [{ translateX: -50 }, { translateY: -50 }],\n//   },\n//   photoImage: {\n//     width: 120,\n//     height: 120,\n//     position: \"absolute\",\n//     // top: 90,\n//     // left: 130,\n//     top: \"18%\",\n//     left: \"48%\",\n//     transform: [{ translateX: -50 }, { translateY: -50 }],\n//     borderRadius: 16,\n//   },\n//   name: {\n//     fontWeight: \"500\",\n//     fontSize: 30,\n//     textAlign: \"center\",\n//     letterSpacing: 0.01,\n//     marginBottom: 20,\n//   },\n// });\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authUpdateUser } from \"../redux/auth/authOperations\";\nimport {\n  selectStateUserId,\n  selectStateLogin,\n  selectStateAvatar,\n  selectorStateComment,\n} from \"../redux/selectors\";\nimport { storage } from \"../firebase/config\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n  Image,\n  Alert,\n  StyleSheet,\n} from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Feather } from \"@expo/vector-icons\";\nimport image from \"../img/Photo-BG.jpg\";\n\nimport { db } from \"../firebase/config\";\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\nimport { ProfileList } from \"../components/ProfileList\";\nimport { askIfQuit, ImageManipulator } from \"../helpers\";\nimport { LoaderScreen } from \"./LoaderScreen\";\n\nexport const ProfileScreen = ({ navigation, route }) => {\n  const [posts, setPosts] = useState([]);\n  const [isShowLoaderAvatar, setIsShowLoaderAvatar] = useState(false);\n  const [isShowLoaderPosts, setIsShowLoaderPosts] = useState(false);\n  const dispatch = useDispatch();\n  const userId = useSelector(selectStateUserId);\n  const login = useSelector(selectStateLogin);\n  const avatar = useSelector(selectStateAvatar);\n  const comment = useSelector(selectorStateComment);\n\n  useEffect(() => {\n    setIsShowLoaderPosts(true);\n    const dbRef = collection(db, \"posts\");\n    const myQuery = query(dbRef, where(\"owner.userId\", \"==\", userId));\n\n    onSnapshot(\n      myQuery,\n      (querySnapshot) => {\n        const posts = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        const reversPosts = posts.reverse();\n        setPosts(reversPosts);\n        setIsShowLoaderPosts(false);\n      },\n      () => {}\n    );\n  }, [userId, comment]);\n\n  const pickImage = async () => {\n    try {\n      const { assets, canceled } = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n\n      if (!canceled) {\n        const [{ uri }] = assets;\n\n        const newUri = await ImageManipulator(\n          uri,\n          [\n            {\n              resize: { height: 240, width: 240 },\n            },\n          ],\n          0.5\n        );\n        return newUri;\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const uploadPhotoToServer = async (photo) => {\n    const uniquePostId = Date.now().toString();\n\n    try {\n      const response = await fetch(photo);\n\n      const file = await response.blob();\n\n      const imageRef = ref(storage, `userAvatars/${uniquePostId}`);\n      await uploadBytes(imageRef, file);\n\n      return await getDownloadURL(imageRef);\n    } catch (error) {\n      console.log(\"uploadPhotoToServer =====>> \", error);\n      Alert.alert(\"Вибачте, але фото не зберіглось на сервері\", error.message);\n    }\n  };\n\n  const changeAvatar = async () => {\n    setIsShowLoaderAvatar(true);\n\n    const avatarUri = await pickImage();\n    const avatarURL = await uploadPhotoToServer(avatarUri);\n\n    dispatch(authUpdateUser({ avatarURL })).then((data) => {\n      if (data === undefined || !data.uid) {\n        setIsShowLoaderAvatar(false);\n        Alert.alert(`Реєстрацію не виконано! Помилка: ${data}`);\n        return;\n      }\n\n      Alert.alert(\"Вітаємо! Аватар змінено\");\n    });\n\n    setIsShowLoaderAvatar(false);\n  };\n\n  return (\n    <ImageBackground source={image} style={styles.imageBg}>\n      <View style={styles.container}>\n        <View style={styles.myPostsContainer}>\n          <View style={styles.avatarContainer}>\n            <View style={styles.avatarWrp}>\n              {isShowLoaderAvatar ? (\n                <LoaderScreen />\n              ) : (\n                <Image source={{ uri: avatar }} style={styles.avatarImg} />\n              )}\n            </View>\n\n            <TouchableOpacity\n              style={styles.buttonAvatar}\n              onPress={changeAvatar}\n            >\n              <Text style={styles.buttonAvatarText}>{\"+\"}</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.exitBtn}>\n            <Feather\n              name=\"log-out\"\n              size={24}\n              color={styles.exitBtn.color}\n              onPress={() => {\n                askIfQuit(dispatch);\n              }}\n            />\n          </View>\n\n          <Text style={styles.login}>{login}</Text>\n          <Text style={styles.count}>Всього публікацій: {posts.length}</Text>\n\n          {isShowLoaderPosts ? (\n            <LoaderScreen />\n          ) : (\n            <ProfileList posts={posts} navigation={navigation} route={route} />\n          )}\n        </View>\n      </View>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  imageBg: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"flex-end\",\n  },\n  container: {\n    marginTop: -450,\n    paddingHorizontal: 16,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    backgroundColor: \"#fff\",\n  },\n  myPostsContainer: {\n    paddingTop: 60,\n    minHeight: \"50%\",\n  },\n  avatarContainer: {\n    position: \"absolute\",\n    top: 60,\n    left: 250,\n    alignSelf: \"center\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n    borderRadius: 16,\n    backgroundColor: \"#F6F6F6\",\n  },\n  avatarWrp: {\n    borderRadius: 16,\n    overflow: \"hidden\",\n    height: \"14%\",\n    width: \"14%\",\n  },\n  avatarImg: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  buttonAvatar: {\n    position: \"absolute\",\n    bottom: 13,\n    right: -13,\n    height: 25,\n    width: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 25,\n    borderWidth: 1,\n    borderColor: \"#FF6C00\",\n    backgroundColor: \"#ffffff\",\n  },\n  buttonAvatarText: {\n    color: \"#FF6C00\",\n  },\n  exitBtn: {\n    position: \"absolute\",\n    right: 0,\n    top: 16,\n    color: \"#BDBDBD\",\n  },\n  login: {\n    marginBottom: 5,\n    alignSelf: \"center\",\n    fontSize: 30,\n    fontWeight: \"500\",\n  },\n  count: {\n    alignSelf: \"flex-end\",\n    fontSize: 12,\n    marginBottom: 3,\n    color: \"#BDBDBD\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}