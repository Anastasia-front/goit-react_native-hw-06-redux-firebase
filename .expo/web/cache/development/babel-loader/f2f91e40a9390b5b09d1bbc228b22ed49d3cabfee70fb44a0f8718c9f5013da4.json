{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { collection, addDoc, getDocs, updateDoc, doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"./config\";\nexport var writeDataToFirestore = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var uniquePostId = Date.now().toString();\n    var collectionRef = doc(db, \"test\", uniquePostId);\n    var data = {\n      email: \"Ada\",\n      name: \"Lovelace\",\n      password: \"1815\",\n      photo: \"tbrtnb\"\n    };\n    try {\n      yield setDoc(collectionRef, data);\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      throw e;\n    }\n  });\n  return function writeDataToFirestore() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getDataFromFirestore = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var snapshot = yield getDocs(collection(db, \"users\"));\n      snapshot.forEach(function (doc) {\n        return console.log(doc.id + \" =>\", doc.data());\n      });\n      return snapshot.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  });\n  return function getDataFromFirestore() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updateDataInFirestore = function () {\n  var _ref3 = _asyncToGenerator(function* (collectionName, docId) {\n    try {\n      var ref = doc(db, collectionName, docId);\n      yield updateDoc(ref, {\n        age: 25\n      });\n      console.log(\"document updated\");\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function updateDataInFirestore(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","doc","setDoc","db","writeDataToFirestore","_ref","_asyncToGenerator","uniquePostId","Date","now","toString","collectionRef","data","email","name","password","photo","console","log","docRef","id","e","error","apply","arguments","getDataFromFirestore","_ref2","snapshot","forEach","map","updateDataInFirestore","_ref3","collectionName","docId","ref","age","_x","_x2"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/firebase/collections.js"],"sourcesContent":["import {\n  collection,\n  addDoc,\n  getDocs,\n  updateDoc,\n  doc,\n  setDoc,\n} from \"firebase/firestore\";\nimport { db } from \"./config\";\n\nexport const writeDataToFirestore = async () => {\n  const uniquePostId = Date.now().toString();\n  const collectionRef = doc(db, \"test\", uniquePostId);\n  const data = {\n    email: \"Ada\",\n    name: \"Lovelace\",\n    password: \"1815\",\n    photo: \"tbrtnb\",\n  };\n  try {\n    await setDoc(collectionRef, data);\n    console.log(\"Document written with ID: \", docRef.id);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n    throw e;\n  }\n};\n\nexport const getDataFromFirestore = async () => {\n  try {\n    const snapshot = await getDocs(collection(db, \"users\"));\n    // Перевіряємо у консолі отримані дані\n    snapshot.forEach((doc) => console.log(`${doc.id} =>`, doc.data()));\n    // Повертаємо масив обʼєктів у довільній формі\n    return snapshot.map((doc) => ({ id: doc.id, data: doc.data() }));\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const updateDataInFirestore = async (collectionName, docId) => {\n  try {\n    const ref = doc(db, collectionName, docId);\n\n    await updateDoc(ref, {\n      age: 25,\n    });\n    console.log(\"document updated\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":";AAAA,SACEA,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,GAAG,EACHC,MAAM,QACD,oBAAoB;AAC3B,SAASC,EAAE;AAEX,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC9C,IAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC1C,IAAMC,aAAa,GAAGV,GAAG,CAACE,EAAE,EAAE,MAAM,EAAEI,YAAY,CAAC;IACnD,IAAMK,IAAI,GAAG;MACXC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,MAAM;MAChBC,KAAK,EAAE;IACT,CAAC;IACD,IAAI;MACF,MAAMd,MAAM,CAACS,aAAa,EAAEC,IAAI,CAAC;MACjCK,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,MAAM,CAACC,EAAE,CAAC;IACtD,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVJ,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAED,CAAC,CAAC;MAC3C,MAAMA,CAAC;IACT;EACF,CAAC;EAAA,gBAhBYjB,oBAAoBA,CAAA;IAAA,OAAAC,IAAA,CAAAkB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgBhC;AAED,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,KAAA,GAAApB,iBAAA,CAAG,aAAY;IAC9C,IAAI;MACF,IAAMqB,QAAQ,SAAS5B,OAAO,CAACF,UAAU,CAACM,EAAE,EAAE,OAAO,CAAC,CAAC;MAEvDwB,QAAQ,CAACC,OAAO,CAAC,UAAC3B,GAAG;QAAA,OAAKgB,OAAO,CAACC,GAAG,CAAIjB,GAAG,CAACmB,EAAE,UAAOnB,GAAG,CAACW,IAAI,CAAC,CAAC,CAAC;MAAA,EAAC;MAElE,OAAOe,QAAQ,CAACE,GAAG,CAAC,UAAC5B,GAAG;QAAA,OAAM;UAAEmB,EAAE,EAAEnB,GAAG,CAACmB,EAAE;UAAER,IAAI,EAAEX,GAAG,CAACW,IAAI,CAAC;QAAE,CAAC;MAAA,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClB,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAXYG,oBAAoBA,CAAA;IAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWhC;AAED,OAAO,IAAMM,qBAAqB;EAAA,IAAAC,KAAA,GAAAzB,iBAAA,CAAG,WAAO0B,cAAc,EAAEC,KAAK,EAAK;IACpE,IAAI;MACF,IAAMC,GAAG,GAAGjC,GAAG,CAACE,EAAE,EAAE6B,cAAc,EAAEC,KAAK,CAAC;MAE1C,MAAMjC,SAAS,CAACkC,GAAG,EAAE;QACnBC,GAAG,EAAE;MACP,CAAC,CAAC;MACFlB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB;EACF,CAAC;EAAA,gBAXYQ,qBAAqBA,CAAAM,EAAA,EAAAC,GAAA;IAAA,OAAAN,KAAA,CAAAR,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}