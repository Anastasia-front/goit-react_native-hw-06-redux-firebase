{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db } from \"../firebase/config\";\nimport { collection, getCountFromServer } from \"firebase/firestore\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Post = function Post(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var post = {\n    photo: \"../img/Photo-BG.jpg\",\n    owner: {\n      avatar: \"../img/Photo.jpg\"\n    },\n    titlePost: \"Nature\",\n    id: 12345\n  };\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    countComments = _useState2[0],\n    setCountComments = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    likes = _useState4[0],\n    setLikes = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    numberOfClicks = _useState6[0],\n    setNumberOfClicks = _useState6[1];\n  var handleLike = function handleLike() {\n    setLikes(likes + 1);\n    setNumberOfClicks(1);\n    if (numberOfClicks === 1) {\n      setLikes(likes - 1);\n      setNumberOfClicks(0);\n    }\n  };\n  useEffect(function () {\n    try {\n      var checkCount = function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          var dbRef = collection(db, \"posts\", post.id, \"comments\");\n          var snapshot = yield getCountFromServer(dbRef);\n          setCountComments(snapshot.data().count);\n        });\n        return function checkCount() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      checkCount();\n    } catch (error) {\n      console.log(\"Post >\", error.message);\n    }\n  }, [post]);\n  return _jsxs(View, {\n    style: styles.postWrp,\n    children: [_jsx(Image, {\n      source: {\n        uri: post.photo\n      },\n      style: styles.photo\n    }), _jsxs(View, {\n      style: styles.bottomInfo,\n      children: [(route == null ? void 0 : route.name) !== \"Profile\" && _jsx(View, {\n        style: styles.owner,\n        children: _jsx(Image, {\n          source: {\n            uri: post.owner.avatar\n          },\n          style: styles.avatar\n        })\n      }), _jsxs(View, {\n        style: styles.desc,\n        children: [_jsx(Text, {\n          style: styles.titlePost,\n          ellipsizeMode: \"tail\",\n          numberOfLines: 1,\n          children: post.titlePost\n        }), _jsxs(View, {\n          style: styles.buttonsWrp,\n          children: [_jsxs(TouchableOpacity, {\n            style: styles.buttonComments,\n            onPress: function onPress() {\n              return navigation.navigate(\"Comments\", post);\n            },\n            children: [_jsx(View, {\n              style: styles.commentsIcon,\n              children: _jsx(Feather, {\n                name: \"message-circle\",\n                size: 24,\n                color: styles.commentsIcon.fill\n              })\n            }), _jsx(Text, {\n              style: styles.commentsCount,\n              children: countComments\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.buttonComments,\n            onPress: handleLike,\n            children: [_jsx(View, {\n              style: styles.mapIcon,\n              children: _jsx(Ionicons, {\n                name: \"heart\",\n                size: 25,\n                color: likes > 0 ? \"#FF6C00\" : \"#BDBDBD\",\n                onPress: handleLike\n              })\n            }), _jsx(Text, {\n              style: styles.commentsCount,\n              children: likes\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: styles.buttonLocation,\n            onPress: function onPress() {\n              return navigation.navigate(\"Map\", post);\n            },\n            children: [_jsx(View, {\n              style: styles.mapIcon,\n              children: _jsx(Feather, {\n                name: \"map-pin\",\n                size: 24,\n                color: styles.mapIcon.fill\n              })\n            }), _jsx(Text, {\n              style: styles.mapTitle,\n              ellipsizeMode: \"tail\",\n              numberOfLines: 1\n            })]\n          })]\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  postWrp: {\n    marginBottom: 10\n  },\n  photo: {\n    backgroundColor: \"#F6F6F6\",\n    borderWidth: 1,\n    width: 330,\n    height: 240,\n    marginBottom: 20,\n    borderRadius: 8,\n    borderColor: \"#E8E8E8\"\n  },\n  bottomInfo: {\n    flexDirection: \"row\"\n  },\n  owner: {\n    marginRight: 10,\n    height: 50,\n    width: 50,\n    borderRadius: 50,\n    backgroundColor: \"#BDBDBD\"\n  },\n  avatar: {\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 50,\n    borderWidth: 1,\n    overflow: \"hidden\"\n  },\n  desc: {},\n  titlePost: {\n    marginBottom: 5,\n    maxWidth: 100,\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: \"#212121\"\n  },\n  buttonsWrp: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 60,\n    gap: 20\n  },\n  buttonComments: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  commentsIcon: {\n    marginRight: 15,\n    transform: [{\n      rotate: \"-90deg\"\n    }],\n    fill: \"#BDBDBD\"\n  },\n  commentsCount: {\n    fontSize: 16,\n    color: \"#BDBDBD\"\n  },\n  buttonLocation: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  mapIcon: {\n    marginRight: 15,\n    fill: \"#BDBDBD\"\n  },\n  mapTitle: {\n    maxWidth: 100,\n    fontSize: 16,\n    fontWeight: \"500\",\n    textDecorationLine: \"underline\",\n    color: \"#212121\"\n  }\n});","map":{"version":3,"names":["Ionicons","useState","useEffect","View","Text","Image","TouchableOpacity","StyleSheet","db","collection","getCountFromServer","Feather","jsx","_jsx","jsxs","_jsxs","Post","_ref","navigation","route","post","photo","owner","avatar","titlePost","id","_useState","_useState2","_slicedToArray","countComments","setCountComments","_useState3","_useState4","likes","setLikes","_useState5","_useState6","numberOfClicks","setNumberOfClicks","handleLike","checkCount","_ref2","_asyncToGenerator","dbRef","snapshot","data","count","apply","arguments","error","console","log","message","style","styles","postWrp","children","source","uri","bottomInfo","name","desc","ellipsizeMode","numberOfLines","buttonsWrp","buttonComments","onPress","navigate","commentsIcon","size","color","fill","commentsCount","mapIcon","buttonLocation","mapTitle","create","marginBottom","backgroundColor","borderWidth","width","height","borderRadius","borderColor","flexDirection","marginRight","overflow","maxWidth","fontSize","fontWeight","justifyContent","gap","alignItems","transform","rotate","textDecorationLine"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/src/components/Post.js"],"sourcesContent":["// import { TouchableOpacity, View, Text, Image, StyleSheet } from \"react-native\";\n// import { Ionicons } from \"@expo/vector-icons\";\n// import { useState } from \"react\";\n// import { useNavigation, useRoute } from \"@react-navigation/native\";\n// import { useSelector } from \"react-redux\";\n// import { selectName, selectAvatar, selectEmail } from \"../redux/selectors\";\n\n// export default function Post({ img, title, location }) {\n//   const navigation = useNavigation();\n//   const route = useRoute();\n\n//   const name = useSelector(selectName);\n//   const avatar = useSelector(selectAvatar);\n//   const email = useSelector(selectEmail);\n\n//   const [comments, setComments] = useState(3);\n//   const [likes, setLikes] = useState(6);\n//   const [numberOfClicks, setNumberOfClicks] = useState(0);\n//   const handleLike = () => {\n//     setLikes(likes + 1);\n//     setNumberOfClicks(1);\n//     console.log(name, avatar, email);\n//     if (numberOfClicks === 1) {\n//       setLikes(likes - 1);\n//       setNumberOfClicks(0);\n//     }\n//   };\n\n//   return (\n//     <View>\n//       <Image style={styles.photo} source={img} />\n//       <View style={styles.parent}>\n//         <Text style={styles.text}>{title}</Text>\n//         <View style={styles.spaceBetween}>\n//           <View style={styles.rowGap}>\n//             <View style={styles.row}>\n//               <Ionicons\n//                 name=\"list\"\n//                 size={25}\n//                 color={comments > 0 ? \"#FF6C00\" : \"#BDBDBD\"}\n//                 onPress={() =>\n//                   navigation.navigate(\"Comments\", {\n//                     previousScreen: route.name,\n//                   })\n//                 }\n//               />\n//               <Text style={[styles.number, comments > 0 && { color: \"#000\" }]}>\n//                 {comments}\n//               </Text>\n//             </View>\n//             <View style={styles.row}>\n//               <Ionicons\n//                 name=\"heart\"\n//                 size={25}\n//                 color={likes > 0 ? \"#FF6C00\" : \"#BDBDBD\"}\n//                 onPress={handleLike}\n//               />\n//               <Text style={[styles.number, likes > 0 && { color: \"#000\" }]}>\n//                 {likes}\n//               </Text>\n//             </View>\n//           </View>\n\n//           <View style={styles.row}>\n//             <Ionicons\n//               name=\"navigate\"\n//               size={20}\n//               color=\"#BDBDBD\"\n//               onPress={() => navigation.navigate(\"Map\")}\n//             />\n//             <TouchableOpacity onPress={() => navigation.navigate(\"Map\")}>\n//               <Text style={styles.location}>{location}</Text>\n//             </TouchableOpacity>\n//           </View>\n//         </View>\n//       </View>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   parent: {\n//     paddingRight: 7,\n//     paddingLeft: 3,\n//     paddingTop: 3,\n//   },\n//   photo: {\n//     width: \"100%\",\n//     height: 240,\n//     backgroundColor: \"#f6f6f6\",\n//     borderColor: \"#fff\",\n//     borderWidth: 1,\n//     borderRadius: 8,\n//     overflow: \"hidden\",\n//   },\n//   row: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     gap: 7,\n//   },\n//   rowGap: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     gap: 25,\n//   },\n//   spaceBetween: {\n//     flexDirection: \"row\",\n//     justifyContent: \"space-between\",\n//   },\n//   text: {\n//     marginVertical: 7,\n//     color: \"#212121\",\n//     fontWeight: \"500\",\n//     fontSize: 18,\n//   },\n//   number: { fontWeight: 400, fontSize: 16, color: \"#BDBDBD\" },\n//   location: {\n//     color: \"#212121\",\n//     fontWeight: \"400\",\n//     fontSize: 16,\n//     textDecorationLine: \"underline\",\n//   },\n// });\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useState, useEffect } from \"react\";\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { db } from \"../firebase/config\";\nimport { collection, getCountFromServer } from \"firebase/firestore\";\nimport { Feather } from \"@expo/vector-icons\";\n\nexport const Post = ({ navigation, route }) => {\n  const post = {\n    photo: \"../img/Photo-BG.jpg\",\n    owner: { avatar: \"../img/Photo.jpg\" },\n    titlePost: \"Nature\",\n    id: 12345,\n  };\n  const [countComments, setCountComments] = useState(0);\n  const [likes, setLikes] = useState(0);\n  const [numberOfClicks, setNumberOfClicks] = useState(0);\n  const handleLike = () => {\n    setLikes(likes + 1);\n    setNumberOfClicks(1);\n    if (numberOfClicks === 1) {\n      setLikes(likes - 1);\n      setNumberOfClicks(0);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      const checkCount = async () => {\n        const dbRef = collection(db, \"posts\", post.id, \"comments\");\n\n        const snapshot = await getCountFromServer(dbRef);\n        setCountComments(snapshot.data().count);\n      };\n\n      checkCount();\n    } catch (error) {\n      console.log(\"Post >\", error.message);\n    }\n  }, [post]);\n\n  // const selectTitleLocation = ({ location }) => {\n  //   if (location.title) {\n  //     return location.title;\n  //   }\n\n  //   if (location.postAddress && location.postAddress) {\n  //     return `${location.postAddress?.city}, ${location.postAddress?.street}`;\n  //   }\n\n  //   return \"Дефолтна локація\";\n  // };\n\n  return (\n    <View style={styles.postWrp}>\n      <Image source={{ uri: post.photo }} style={styles.photo} />\n      <View style={styles.bottomInfo}>\n        {route?.name !== \"Profile\" && (\n          <View style={styles.owner}>\n            <Image source={{ uri: post.owner.avatar }} style={styles.avatar} />\n          </View>\n        )}\n\n        <View style={styles.desc}>\n          <Text style={styles.titlePost} ellipsizeMode=\"tail\" numberOfLines={1}>\n            {post.titlePost}\n          </Text>\n\n          <View style={styles.buttonsWrp}>\n            <TouchableOpacity\n              style={styles.buttonComments}\n              onPress={() => navigation.navigate(\"Comments\", post)}\n            >\n              <View style={styles.commentsIcon}>\n                <Feather\n                  name=\"message-circle\"\n                  size={24}\n                  color={styles.commentsIcon.fill}\n                />\n              </View>\n              <Text style={styles.commentsCount}>{countComments}</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.buttonComments}\n              onPress={handleLike}\n            >\n              <View style={styles.mapIcon}>\n                <Ionicons\n                  name=\"heart\"\n                  size={25}\n                  color={likes > 0 ? \"#FF6C00\" : \"#BDBDBD\"}\n                  onPress={handleLike}\n                />\n              </View>\n              <Text style={styles.commentsCount}>{likes}</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.buttonLocation}\n              onPress={() => navigation.navigate(\"Map\", post)}\n            >\n              <View style={styles.mapIcon}>\n                <Feather name=\"map-pin\" size={24} color={styles.mapIcon.fill} />\n              </View>\n              <Text\n                style={styles.mapTitle}\n                ellipsizeMode=\"tail\"\n                numberOfLines={1}\n              >\n                {/* {selectTitleLocation(post)} */}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  postWrp: {\n    marginBottom: 10,\n  },\n  photo: {\n    backgroundColor: \"#F6F6F6\",\n    borderWidth: 1,\n    width: 330,\n    height: 240,\n    marginBottom: 20,\n    borderRadius: 8,\n    borderColor: \"#E8E8E8\",\n  },\n  bottomInfo: {\n    flexDirection: \"row\",\n  },\n  owner: {\n    marginRight: 10,\n    height: 50,\n    width: 50,\n    borderRadius: 50,\n    backgroundColor: \"#BDBDBD\",\n  },\n  avatar: {\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 50,\n    borderWidth: 1,\n    overflow: \"hidden\",\n  },\n  desc: {},\n  titlePost: {\n    marginBottom: 5,\n    maxWidth: 100,\n\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: \"#212121\",\n  },\n  buttonsWrp: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: 60,\n    gap: 20,\n  },\n  buttonComments: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  commentsIcon: {\n    marginRight: 15,\n    transform: [{ rotate: \"-90deg\" }],\n    fill: \"#BDBDBD\",\n  },\n  commentsCount: {\n    fontSize: 16,\n    color: \"#BDBDBD\",\n  },\n  buttonLocation: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  mapIcon: {\n    marginRight: 15,\n    fill: \"#BDBDBD\",\n  },\n  mapTitle: {\n    maxWidth: 100,\n\n    fontSize: 16,\n    fontWeight: \"500\",\n    textDecorationLine: \"underline\",\n    color: \"#212121\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}