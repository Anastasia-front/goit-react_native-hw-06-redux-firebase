{"ast":null,"code":"export var savePhoto = function savePhoto(photo) {\n  return {\n    type: \"SAVE_PHOTO\",\n    payload: photo\n  };\n};\nexport var saveName = function saveName(name) {\n  return {\n    type: \"SAVE_NAME\",\n    payload: name\n  };\n};\nexport var saveEmail = function saveEmail(email) {\n  return {\n    type: \"SAVE_EMAIL\",\n    payload: email\n  };\n};","map":{"version":3,"names":["savePhoto","photo","type","payload","saveName","name","saveEmail","email"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/redux/auth/authActions.js"],"sourcesContent":["export const savePhoto = (photo) => {\n  return {\n    type: \"SAVE_PHOTO\",\n    payload: photo,\n  };\n};\n\nexport const saveName = (name) => {\n  return {\n    type: \"SAVE_NAME\",\n    payload: name,\n  };\n};\n\nexport const saveEmail = (email) => {\n  return {\n    type: \"SAVE_EMAIL\",\n    payload: email,\n  };\n};\n\n// import {\n//   createUserWithEmailAndPassword,\n//   signInWithEmailAndPassword,\n//   updateProfile,\n//   onAuthStateChanged,\n//   signOut,\n// } from \"firebase/auth\";\n// import { auth } from \"../../firebase/config\";\n// import { updateUserProfile, authStateChange, authSignOut } from \"./authReducer\";\n\n// export const authSignUpUser =\n//   ({ login, email, password, photo }) =>\n//   async (dispatch) => {\n//     try {\n//       await createUserWithEmailAndPassword(auth, email, password);\n\n//       const user = auth.currentUser;\n\n//       await updateProfile(user, {\n//         displayName: login,\n//         photoURL: photo,\n//       });\n\n//       const {\n//         uid,\n//         displayName,\n//         email: emailBase,\n//         photoURL: photoUrlBase,\n//       } = await auth.currentUser;\n\n//       const userProfile = {\n//         userId: uid,\n//         login: displayName,\n//         email: emailBase,\n//         photoURL: photoUrlBase,\n//       };\n\n//       dispatch(updateUserProfile(userProfile));\n//       return user;\n//     } catch (error) {\n//       return error.code;\n//     }\n//   };\n\n// export const authSignInUser =\n//   ({ email, password }) =>\n//   async () => {\n//     try {\n//       return await signInWithEmailAndPassword(auth, email, password);\n//     } catch (error) {\n//       return error.code;\n//     }\n//   };\n\n// // refactor to change avatar or login\n// export const authUpdateUser =\n//   ({ avatarURL }) =>\n//   async (dispatch, state) => {\n//     try {\n//       const user = auth.currentUser;\n\n//       await updateProfile(user, {\n//         photoURL: avatarURL,\n//       });\n\n//       const {\n//         uid,\n//         displayName,\n//         email: emailBase,\n//         photoURL: photoUrlBase,\n//       } = await auth.currentUser;\n\n//       const userProfile = {\n//         userId: uid,\n//         login: displayName,\n//         email: emailBase,\n//         photoURL: photoUrlBase,\n//       };\n\n//       dispatch(updateUserProfile(userProfile));\n//     } catch (error) {\n//       return error.code;\n//     }\n//   };\n\n// export const authStateChangeUser = () => async (dispatch, state) => {\n//   await onAuthStateChanged(auth, (user) => {\n//     // console.log(user)\n//     if (user) {\n//       const userProfile = {\n//         userId: user.uid,\n//         login: user.displayName,\n//         email: user.email,\n//         photoURL: user.photoURL,\n//       };\n\n//       dispatch(authStateChange({ stateChange: true }));\n//       dispatch(updateUserProfile(userProfile));\n//     }\n//   });\n// };\n\n// export const authSignOutUser = () => async (dispatch, state) => {\n//   await signOut(auth);\n\n//   dispatch(authSignOut());\n// };\n"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAK;EAClC,OAAO;IACLC,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI,EAAK;EAChC,OAAO;IACLH,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAED,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAK;EAClC,OAAO;IACLL,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEI;EACX,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}