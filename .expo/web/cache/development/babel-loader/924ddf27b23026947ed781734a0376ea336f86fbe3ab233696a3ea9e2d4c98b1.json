{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar InputWithButton = function InputWithButton() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValue = _useState2[0],\n    setInputValue = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFocused = _useState4[0],\n    setIsFocused = _useState4[1];\n  var handleFocus = function handleFocus() {\n    setIsFocused(true);\n  };\n  var handleBlur = function handleBlur() {\n    setIsFocused(false);\n  };\n  var handleInputChange = function handleInputChange(text) {\n    setInputValue(text);\n  };\n  var handleButtonClick = function handleButtonClick() {\n    console.log(\"Button clicked!\");\n  };\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n      children: [_jsx(TextInput, {\n        style: [styles.input, isFocused && styles.inputFocused],\n        value: inputValue,\n        onChangeText: handleInputChange,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        placeholder: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0443\\u0432\\u0430\\u0442\\u0438...\"\n      }), _jsx(View, {\n        style: styles.arrowContainer,\n        children: _jsx(Ionicons, {\n          name: \"arrow-up\",\n          size: 25,\n          color: \"#fff\",\n          style: styles.arrow,\n          onPress: handleButtonClick\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 50,\n    paddingLeft: 16,\n    marginBottom: 16,\n    backgroundColor: \"#f6f6f6\",\n    borderColor: \"#E8E8E8\",\n    borderWidth: 1,\n    borderRadius: 100\n  },\n  inputFocused: {\n    backgroundColor: \"white\",\n    borderColor: \"#FF6C00\"\n  },\n  arrowContainer: {\n    width: 34,\n    height: 34,\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 50,\n    position: \"absolute\",\n    top: 10,\n    right: 10\n  },\n  arrow: {\n    position: \"absolute\",\n    top: 4,\n    right: 4\n  }\n});\nexport default InputWithButton;","map":{"version":3,"names":["React","useState","Ionicons","View","TextInput","KeyboardAvoidingView","Platform","StyleSheet","jsx","_jsx","jsxs","_jsxs","InputWithButton","_useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","isFocused","setIsFocused","handleFocus","handleBlur","handleInputChange","text","handleButtonClick","console","log","style","flexDirection","children","behavior","OS","styles","input","inputFocused","value","onChangeText","onFocus","onBlur","placeholder","arrowContainer","name","size","color","arrow","onPress","create","width","height","paddingLeft","marginBottom","backgroundColor","borderColor","borderWidth","borderRadius","position","top","right"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-06-redux-firebase/src/components/CommentInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  View,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n} from \"react-native\";\n\nconst InputWithButton = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n\n  const handleInputChange = (text) => {\n    setInputValue(text);\n  };\n\n  const handleButtonClick = () => {\n    // Обработка нажатия на кнопку\n    console.log(\"Button clicked!\");\n  };\n\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n      >\n        <TextInput\n          style={[styles.input, isFocused && styles.inputFocused]}\n          value={inputValue}\n          onChangeText={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          placeholder=\"Коментувати...\"\n        />\n        <View style={styles.arrowContainer}>\n          <Ionicons\n            name=\"arrow-up\"\n            size={25}\n            color=\"#fff\"\n            style={styles.arrow}\n            onPress={handleButtonClick}\n          />\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 50,\n    paddingLeft: 16,\n    marginBottom: 16,\n    backgroundColor: \"#f6f6f6\",\n    borderColor: \"#E8E8E8\",\n    borderWidth: 1,\n    borderRadius: 100,\n  },\n  inputFocused: {\n    backgroundColor: \"white\",\n    borderColor: \"#FF6C00\",\n  },\n  arrowContainer: {\n    width: 34,\n    height: 34,\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 50,\n    position: \"absolute\",\n    top: 10,\n    right: 10,\n  },\n  arrow: {\n    position: \"absolute\",\n    top: 4,\n    right: 4,\n  },\n});\n\nexport default InputWithButton;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAS9C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAAoCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAkCjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAI,EAAK;IAClCR,aAAa,CAACQ,IAAI,CAAC;EACrB,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAE9BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,OACEnB,IAAA,CAACN,IAAI;IAAC0B,KAAK,EAAE;MAAEC,aAAa,EAAE;IAAM,CAAE;IAAAC,QAAA,EACpCpB,KAAA,CAACN,oBAAoB;MACnB2B,QAAQ,EAAE1B,QAAQ,CAAC2B,EAAE,IAAI,KAAK,GAAG,SAAS,GAAG,QAAS;MAAAF,QAAA,GAEtDtB,IAAA,CAACL,SAAS;QACRyB,KAAK,EAAE,CAACK,MAAM,CAACC,KAAK,EAAEf,SAAS,IAAIc,MAAM,CAACE,YAAY,CAAE;QACxDC,KAAK,EAAErB,UAAW;QAClBsB,YAAY,EAAEd,iBAAkB;QAChCe,OAAO,EAAEjB,WAAY;QACrBkB,MAAM,EAAEjB,UAAW;QACnBkB,WAAW,EAAC;MAAgB,CAC7B,CAAC,EACFhC,IAAA,CAACN,IAAI;QAAC0B,KAAK,EAAEK,MAAM,CAACQ,cAAe;QAAAX,QAAA,EACjCtB,IAAA,CAACP,QAAQ;UACPyC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAC,MAAM;UACZhB,KAAK,EAAEK,MAAM,CAACY,KAAM;UACpBC,OAAO,EAAErB;QAAkB,CAC5B;MAAC,CACE,CAAC;IAAA,CACa;EAAC,CACnB,CAAC;AAEX,CAAC;AAED,IAAMQ,MAAM,GAAG3B,UAAU,CAACyC,MAAM,CAAC;EAC/Bb,KAAK,EAAE;IACLc,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,SAAS;IAC1BC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EACDpB,YAAY,EAAE;IACZiB,eAAe,EAAE,OAAO;IACxBC,WAAW,EAAE;EACf,CAAC;EACDZ,cAAc,EAAE;IACdO,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVG,eAAe,EAAE,SAAS;IAC1BG,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE;EACT,CAAC;EACDb,KAAK,EAAE;IACLW,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe/C,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}